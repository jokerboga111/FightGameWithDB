@isTest
public class TestGameController {
    public static GameController gameController=new GameController();
       @isTest
    public static void testProfile(){
        gameController.first = new Profile('Bobby','Human', 700,40,50,60,40,
        'https://s-media-cache-ak0.pinimg.com/236x/5a/5e/5a/5a5e5af1f3117407341623601720b513.jpg');
        gameController.second = new Profile('Bobby','Human', 700,40,50,60,40,
        'https://s-media-cache-ak0.pinimg.com/236x/5a/5e/5a/5a5e5af1f3117407341623601720b513.jpg');
        System.assert(gameController.first.Name==gameController.second.Name);
        
     }
    @isTest 
    private static void TestWrapperClass()
    {
       GameController.HeroWrapp wrapp = new GameController.HeroWrapp();
       
       gameController.SelectFromDatabase();
       wrapp = gameController.wrappList.get(0); 
       System.assertEquals(true, wrapp.isDisabled);
       wrapp = gameController.wrappList.get(1); 
       System.assertEquals(null, wrapp.isDisabled); 
    }
       @isTest
   private static void testProfiles(){
        gameController.profiles = [SELECT id, Name, Race__c, Health_Points__c, Min_Dmg__c, Max_Dmg__c, Accuracy__c, 
                  Dexterity__c, Image_URL__c, Block_Time__c
                  FROM Profile__c ORDER BY Race__c];
       System.assert(gameController.profiles==new List<Profile__c>());
        
   }
     @isTest
   private static void testCreateNewFighterHuman(){
        gameController.CreatingHeroName='Boris';
       gameController.SelectRace='Human';
       gameController.CreateNewFighter();
        }
      @isTest
   private static void testCreateNewFighterOrk(){
        gameController.CreatingHeroName='Ork';
       gameController.SelectRace='Ork';
       gameController.CreateNewFighter();
        }
     @isTest
     private static void testCreateNewFighterDwarf(){
        gameController.CreatingHeroName='Dwarf';
       gameController.SelectRace='Dwarf';
       gameController.CreateNewFighter();
        }
     @isTest
     private static void testCreateNewFighterElven(){
        gameController.CreatingHeroName='Elven';
       gameController.SelectRace='Elven';
       gameController.CreateNewFighter();
        }
     @isTest
     private static void testCreateNewFighterAnother(){
        gameController.CreatingHeroName='Elwen';
       gameController.SelectRace='Elwuhhb';
       gameController.CreateNewFighter();
        }
  
      @isTest
    private static void testGetItems(){
        System.assert(gameController.getItems().size()==4);
     }

     @isTest
    private static void testShowCreatingPane(){
         gameController.ShowCreationPane();
        System.assert(gameController.ShowCreationPanel==true);
    }
    @isTest
    private static void testFighterSelection(){
         gameController.profiles = [SELECT id, Name, Race__c, Health_Points__c, Min_Dmg__c, Max_Dmg__c, Accuracy__c, 
                  Dexterity__c, Image_URL__c, Block_Time__c
                  FROM Profile__c];
        Profile__c SelectedHero=new Profile__c();
           SelectedHero.Name = 'Bobi';
           SelectedHero.Race__c = 'Human';
           SelectedHero.Health_Points__c = 700;
           SelectedHero.Min_Dmg__c = 40;
           SelectedHero.Max_Dmg__c = 50;
           SelectedHero.Accuracy__c = 60;
           SelectedHero.Dexterity__c = 40;
           SelectedHero.Image_URL__c = 'https://s-media-cache-ak0.pinimg.com/236x/5a/5e/5a/5a5e5af1f3117407341623601720b513.jpg';
        gameController.SelectedHero=SelectedHero;
        gameController.PcFighter = SelectedHero;
        gameController.FighterSelection();
        System.assert(gameController.ShowFightingPanel==true);
        System.assert(gameController.ShowFightResultPanel ==true);
        System.assert(gameController.ShowSelectionPanel==false);
    }
     @isTest 
    private static void TestFightCalculationFirstWin()
     {
        
        List<Profile__c> SelectedHero = [SELECT id, Name, Race__c, Health_Points__c, Min_Dmg__c, Max_Dmg__c, Accuracy__c, Dexterity__c, Image_URL__c
                  					   FROM Profile__c];
        
        String zone = 'head';
        gameController.hitPlace = zone;
        gameController.BlockPlace = zone;
        gameController.first = new Profile(SelectedHero.get(0).name, SelectedHero.get(0).Race__c, Integer.valueOf(SelectedHero.get(0).Health_Points__c),
                        Integer.valueOf(SelectedHero.get(0).Min_Dmg__c), Integer.valueOf(SelectedHero.get(0).Max_Dmg__c),
                        Integer.valueOf(SelectedHero.get(0).Accuracy__c), Integer.valueOf(SelectedHero.get(0).Dexterity__c),
                        SelectedHero.get(0).Image_URL__c);
        gameController.second = new Profile  (SelectedHero.get(1).name, SelectedHero.get(1).Race__c, Integer.valueOf(SelectedHero.get(1).Health_Points__c),
                        Integer.valueOf(SelectedHero.get(1).Min_Dmg__c), Integer.valueOf(SelectedHero.get(1).Max_Dmg__c),
                        Integer.valueOf(SelectedHero.get(1).Accuracy__c), Integer.valueOf(SelectedHero.get(1).Dexterity__c),
                        SelectedHero.get(1).Image_URL__c); 
         gameController.roundNumber = 1;
        gameController.FightCalculation();
        
        System.assertEquals(0, testSample.second.getHP());
        System.assertEquals(gameController.fightLogMessage, gameController.first.name + ' Win!');
    }
}
